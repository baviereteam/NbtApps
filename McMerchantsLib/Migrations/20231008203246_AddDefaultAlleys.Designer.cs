// <auto-generated />
using System;
using McMerchants.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace McMerchants.Migrations
{
    [DbContext(typeof(McMerchantsDbContext))]
    [Migration("20231008203246_AddDefaultAlleys")]
    partial class AddDefaultAlleys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("McMerchants.Models.Database.Alley", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Coordinate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Direction")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HighBoundary")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LowBoundary")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StartY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoreId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("alleys", (string)null);
                });

            modelBuilder.Entity("McMerchants.Models.Database.FactoryProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FactoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.ToTable("factory_products", (string)null);
                });

            modelBuilder.Entity("McMerchants.Models.Database.ItemProviderRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Dimension")
                        .HasColumnType("TEXT")
                        .HasColumnName("dimension");

                    b.Property<int>("EndX")
                        .HasColumnType("INTEGER")
                        .HasColumnName("endX");

                    b.Property<int>("EndY")
                        .HasColumnType("INTEGER")
                        .HasColumnName("endY");

                    b.Property<int>("EndZ")
                        .HasColumnType("INTEGER")
                        .HasColumnName("endZ");

                    b.Property<string>("Logo")
                        .HasColumnType("TEXT")
                        .HasColumnName("logo");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("StartX")
                        .HasColumnType("INTEGER")
                        .HasColumnName("startX");

                    b.Property<int>("StartY")
                        .HasColumnType("INTEGER")
                        .HasColumnName("startY");

                    b.Property<int>("StartZ")
                        .HasColumnType("INTEGER")
                        .HasColumnName("startZ");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("item_provider_regions", (string)null);

                    b.HasDiscriminator<string>("Type").HasValue("ItemProviderRegion");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("McMerchants.Models.Database.StoreItemDefaultAlley", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlleyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Item")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlleyId");

                    b.ToTable("default_alley", (string)null);
                });

            modelBuilder.Entity("McMerchants.Models.Database.FactoryRegion", b =>
                {
                    b.HasBaseType("McMerchants.Models.Database.ItemProviderRegion");

                    b.HasDiscriminator().HasValue("factory");
                });

            modelBuilder.Entity("McMerchants.Models.Database.StorageRegion", b =>
                {
                    b.HasBaseType("McMerchants.Models.Database.ItemProviderRegion");

                    b.HasDiscriminator().HasValue("storage");
                });

            modelBuilder.Entity("McMerchants.Models.Database.TradingRegion", b =>
                {
                    b.HasBaseType("McMerchants.Models.Database.ItemProviderRegion");

                    b.HasDiscriminator().HasValue("trading");
                });

            modelBuilder.Entity("McMerchants.Models.Database.Alley", b =>
                {
                    b.HasOne("McMerchants.Models.Database.StorageRegion", "Store")
                        .WithMany("Alleys")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("McMerchants.Models.Database.FactoryProduct", b =>
                {
                    b.HasOne("McMerchants.Models.Database.FactoryRegion", "Factory")
                        .WithMany("Products")
                        .HasForeignKey("FactoryId");

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("McMerchants.Models.Database.StoreItemDefaultAlley", b =>
                {
                    b.HasOne("McMerchants.Models.Database.Alley", "Alley")
                        .WithMany()
                        .HasForeignKey("AlleyId");

                    b.Navigation("Alley");
                });

            modelBuilder.Entity("McMerchants.Models.Database.FactoryRegion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("McMerchants.Models.Database.StorageRegion", b =>
                {
                    b.Navigation("Alleys");
                });
#pragma warning restore 612, 618
        }
    }
}
