// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NbtTools.Database;

#nullable disable

namespace NbtTools.Migrations
{
    [DbContext(typeof(NbtDbContext))]
    [Migration("20250605231359_AddEnchantedBooks")]
    partial class AddEnchantedBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("NbtTools.Items.Searchable", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "value");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "label");

                    b.Property<byte>("StackSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("NbtTools.Items.EnchantedBook", b =>
                {
                    b.HasBaseType("NbtTools.Items.Searchable");

                    b.Property<string>("Enchantment")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.ToTable("enchanted_books", (string)null);
                });

            modelBuilder.Entity("NbtTools.Items.Item", b =>
                {
                    b.HasBaseType("NbtTools.Items.Searchable");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("NbtTools.Items.Potion", b =>
                {
                    b.HasBaseType("NbtTools.Items.Searchable");

                    b.Property<string>("PotionContents")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeId")
                        .HasColumnType("TEXT");

                    b.HasIndex("TypeId");

                    b.ToTable("potions", (string)null);
                });

            modelBuilder.Entity("NbtTools.Items.Potion", b =>
                {
                    b.HasOne("NbtTools.Items.Item", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
